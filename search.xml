<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>¿Qué es la computación cuántica y por qué es importante?</title>
    <url>/blog/posts/computacion-cuantica.html</url>
    <content><![CDATA[
La computación cuántica es una rama de la informática que se centra en el estudio de cómo utilizar sistemas cuánticos para procesar información.
Estos sistemas utilizan los fenómenos cuánticos, como la superposición y el entrelazamiento, para realizar cálculos que no son posibles con la tecnología tradicional.

A diferencia de la computación clásica, que utiliza bits que solo pueden tener valores de 0 o 1, la computación cuántica utiliza qubits, que pueden estar en un estado de superposición de 0 y 1 al mismo tiempo.
Esto permite a la computación cuántica realizar operaciones de manera mucho más eficiente que la computación clásica, lo que la hace ideal para resolver problemas complejos que requieren una gran cantidad de cálculos.
Sin embargo, el manejo de qubits es un desafío, ya que son muy sensibles al entorno y pueden perder su estado cuántico coherente fácilmente.
Otro aspecto importante de los qubits es su capacidad de entrelazamiento. El entrelazamiento cuántico permite a dos o más qubits estar en un estado correlacionado, lo que les permite realizar operaciones de manera mucho más rápida y precisa que si cada qubit fuera tratado individualmente.
Uno de los principales desafíos de la computación cuántica es que los sistemas cuánticos son extremadamente sensibles a las perturbaciones externas.
Esto hace que sea difícil construir y mantener dispositivos cuánticos que sean fiables.
Además, la programación para sistemas cuánticos es un campo completamente nuevo, por lo que se requieren nuevos lenguajes de programación y algoritmos para utilizar esta tecnología de manera eficiente.
A pesar de estos desafíos, la computación cuántica tiene un gran potencial.
Se espera que en el futuro pueda ser utilizada para resolver problemas en campos como la criptografía, la simulación de sistemas complejos y la búsqueda de patrones en grandes conjuntos de datos.
También se cree que puede ser utilizada para desarrollar nuevos tipos de sensores y dispositivos médicos.

En resumen, la computación cuántica es un campo emergente y prometedor que tiene el potencial de revolucionar la informática.
Los qubits son una pieza fundamental de esta tecnología y su capacidad de superposición y entrelazamiento les permite realizar operaciones de manera mucho más eficiente que la computación clásica.
A medida que la tecnología avanza y se desarrollan nuevas técnicas para manejar los qubits de manera más eficiente, la computación cuántica tiene el potencial de cambiar la forma en que se hacen cálculos y operaciones en el mundo digital.
Aunque todavía se encuentra en fase de desarrollo, se espera que en un futuro cercano pueda ser utilizada para resolver problemas que son actualmente demasiado complejos para ser resueltos con la tecnología tradicional.
]]></content>
      <categories>
        <category>Ciencia y Tecnología</category>
      </categories>
      <tags>
        <tag>Computación Cuántica</tag>
        <tag>Tecnología</tag>
        <tag>Ciencia</tag>
      </tags>
  </entry>
  <entry>
    <title>Cómo crear un portfolio con GitHub Pages</title>
    <url>/blog/posts/crear-portafolio-web.html</url>
    <content><![CDATA[
Dentro del gran mundo de la programación, necesitas destacarte para optar por mejores trabajos y ser más remunerado por tu experiencia. Pero, ¿cómo logras eso? En este artículo te lo contamos.
Un portfolio web es una página que recopila una selección de tus trabajos o contenidos para darte a conocer ante otras personas. Piénsalo como un Instagram para tus proyectos, pero en vez de tener likes, atraes la atención de reclutadores para optar así a mejores oportunidades laborales.
Tanto al momento de buscar trabajo como para mantener actualizado tu perfil laboral, exhibir tus proyectos en un portfolio web es tan primordial como beneficioso. Existen muchas plataformas para desplegar tu portfolio, pero en esta ocasión utilizaremos GitHub Pages para facilitarte la tarea.
¿Cómo hacer un portfolio?
Para facilitarte la tarea de escribir código, hemos creado una plantilla que muestra tus repositorios de GitHub y más, para que tú solamente edites algunas cosas. Puedes darle un vistazo cliqueando aquí.

Clonando el repositorio


Ingresa a este repositorio.


Descarga el repositorio como ZIP.



Extrae el contenido del archivo.


Abre la carpeta con VS Code (Archivo &gt; Abrir Carpeta o Ctrl + K Ctrl + O).


Creando magia


Abre index.html y busca la palabra EDITAR.



Reemplaza los campos requeridos (aproximadamente 11).


Busca la palabra OPCIONAL y ajusta según los comentarios.


Abre main.js en assets/js y busca EDITAR.



Cambia el nombre de usuario avdyan por el tuyo de GitHub.


Elimina README.md y reemplaza las imágenes y PDF con tus propios archivos.


Abre index.html en tu navegador para revisar que todo funcione correctamente.


Creando el repositorio


Ingresa a github.com/new y crea un nuevo repositorio.


Nómbralo, por ejemplo: portafolio, y configúralo como público.



Haz clic en Create repository.


Subiendo los archivos


Clic en uploading an existing file.


Arrastra los archivos (no la carpeta) al navegador.


Clic en Commit changes.



Activando GitHub Pages


Ve a Settings &gt; Pages.


En Branch, selecciona main, luego clic en Save.


Después de unos segundos, aparecerá la URL de tu portfolio.



Conclusión
Quizás pueda parecerte algo tedioso crear una página web, pero créeme, ahora es mucho más fácil que antes. Además, todo es un beneficio para ti: con un portfolio puedes darte a conocer a las personas y dejar que tus proyectos hablen por ti. No necesitas decir ni venderte, solamente muéstrales tu portfolio y quedarán fascinados.
]]></content>
      <categories>
        <category>Desarrollo Web</category>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>Portfolio</tag>
        <tag>GitHub</tag>
        <tag>Desarrollo Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Las mejores distribuciones Linux tipo rolling release (actualización continua)</title>
    <url>/blog/posts/rolling-release-linux.html</url>
    <content><![CDATA[
Hay tantas distribuciones de Linux que se pueden dividir en diferentes categorías basadas en sus características, mejoras, público objetivo previsto y más. En este artículo, te mostraremos algunas de las mejores distribuciones de Linux de lanzamiento continuo (“rolling release” de acá en adelante).
¿Sabes qué es una distribución “rolling release”?
Estas distribuciones no esperan seis meses o más para lanzar una nueva versión con nuevas versiones del kernel de Linux, entorno de escritorio u otros componentes de software importantes, sino que se actualizan poco después de que se lanzan.
Ahora que estás al tanto de eso, echemos un vistazo a algunas de las mejores distribuciones de Linux de lanzamiento continuo.
openSUSE Tumbleweed

El buen viejo openSUSE se centró en la estabilidad durante años con su sistema de liberación puntual. Hace unos años, decidieron cambiar su oferta creando openSUSE Leap y Tumbleweed.
Mientras que openSUSE Leap sigue un lanzamiento puntual con una nueva versión cada pocos años, Tumbleweed está lanzando un nuevo software poco después de su lanzamiento.
openSUSE Tumbleweed es una excelente opción para aquellos que quieren permanecer en el lado RPM (del lado Red Hat). El ecosistema openSUSE es mucho más diverso con un gran repositorio de software, además, Zypper y YaST le brindan muchas opciones para la administración de paquetes.
Arch Linux

Es la distribución de lanzamiento continuo más popular. Es casi sinónimo de liberación continua.
Hay muchas razones por las que Arch Linux tiene un estatus de culto entre los usuarios de Linux. Creo que tiene más que ver con la sensación de logro que uno siente después de instalar Arch Linux porque incluso el procedimiento de instalación no es como otras distribuciones.
Arch tiene un buen montón de software disponible oficialmente en sus repositorios. Y luego Arch User Repository (AUR) hace que casi cualquier otro software de Linux esté disponible a través del esfuerzo de la comunidad.
Manjaro Linux

Manjaro es básicamente Arch menos todas las molestias que conlleva Arch Linux.
Está basado en Arch Linux, por lo que obtienes Pacman y AUR con un modelo de lanzamiento continuo. Y al mismo tiempo, Manjaro tiene un instalador gráfico, un administrador de paquetes basado en GUI y otras herramientas gráficas para mejorar su experiencia.
Manjaro es más fácil de instalar, más fácil de usar. Una buena opción para aquellos que quieren quedarse cómodamente en el dominio de Arch.
Nota: Hay muchas otras buenas distribuciones basadas en Arch Linux que no podría incluir en esta lista. Si lo deseas, puedes probar Garuda Linux, EndeavourOS y muchas otras.
Solus Linux

Solus también es una distribución de lanzamiento continuo “cuidadosa”. A diferencia de Manjaro, no se basa en Arch. Está creada desde cero y utiliza un administrador de paquetes llamado: eopkg.
Solus es una buena opción si quieres algo diferente pero no lo suficientemente complicado como para hacerte sentir incómodo.
Debian Testing

Debian es conocido por su enfoque en la estabilidad tanto que la estabilidad a veces equivale a obsoleta. Pero eso es para la rama estable.
Debian Testing se encuentra en algún lugar entre la rama estable y la inestable. Obtiene las nuevas características antes del lanzamiento estable.
Void Linux

Void también se creó desde cero, es decir, no se basa en Arch, Red Hat o Debian.
Es un lanzamiento rodante pero no de última generación como Arch. Da preferencia a la estabilidad.
Otra cosa que lo separa de otras distribuciones es el uso de runit como sistema de inicio. En conjunto, Void es una buena opción si eres un usuario experimentado de Linux.
Gentoo Linux

Gentoo no es como tomarte una taza de café y esperar a que todo se instale fácilmente. Todo, desde la instalación hasta la configuración y la administración de paquetes, requiere algún tipo de experiencia y tiempo.
Gentoo podría ser la distribución de tu elección si sientes que cualquier otra distribución no es lo suficientemente desafiante.
Conclusiones
Cualquiera que sea tu nivel de experiencia, siempre habrá alguna distro que se adapte a ti. Desde Tumbleweed hasta Gentoo, desde lo más fácil hasta lo más complejo, en el mundo de Linux encontrarás cosas locas y a la vez interesantes. Intenta probar o consultar en los foros, que de seguro encontrarás algo con lo que quedarte.
]]></content>
      <categories>
        <category>Guías Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Distribuciones</tag>
      </tags>
  </entry>
  <entry>
    <title>Las 6 Paradojas Más Fascinantes de la Física</title>
    <url>/blog/posts/famosas-paradojas-fisica.html</url>
    <content><![CDATA[
La palabra paradoja, de origen griego, puede referir algo contrario al sentido común, o bien algo que sucede contra lo esperado y provoca asombro. Descubre 6 de éstos a continuación.
Paradoja del Abuelo
Una de las posibles paradojas que se desprenderían de un potencial viaje en el tiempo es conocida popularmente como la paradoja del abuelo.
En el libro “El Viajero Imprudente” se esbozó por primera vez esta paradoja usada por muchos físicos para demostrar los riesgos del viaje en el tiempo.
Allí el personaje que retrocede en el tiempo, asesina a su abuelo, antes de que haya entablado relación amorosa con su abuela. En esta extensión de sí mismo, es decir su abuelo en el pasado, el viajero imprudente cometería el error de aniquilarse potencialmente en un futuro posible, dando origen a la paradoja del abuelo.
Paradoja EPR
La paradoja de Einstein-Podolsky-Rosen o paradoja EPR es un experimento mental destinado a demostrar una paradoja inherente en las primeras formulaciones de la teoría cuántica. Es uno de los ejemplos más conocidos de entrelazamiento cuántico. La paradoja involucra dos partículas que están entrelazadas según la mecánica cuántica. Según la interpretación de Copenhague de la mecánica cuántica, cada partícula está individualmente en un estado incierto hasta que se mide, momento en el que el estado de esa partícula se vuelve seguro.
En ese mismo momento exacto, el estado de la otra partícula también se vuelve seguro. La razón por la que esto se clasifica como una paradoja es que aparentemente involucra la comunicación entre las dos partículas a velocidades mayores que la velocidad de la luz, lo cual es un conflicto con la teoría de la relatividad de Albert Einstein.
Paradoja de los Gemelos
Es un experimento mental que analiza la distinta percepción del tiempo entre dos observadores con diferentes estados de movimiento. Esta paradoja fue propuesta por Albert Einstein al desarrollar lo que hoy se conoce como la teoría de la relatividad especial. La paradoja de los gemelos plantea que, debido al efecto conocido como dilatación temporal, un astronauta regresaría de un viaje interestelar a velocidades próximas a la de la luz siendo considerablemente más joven que su hermano gemelo en la Tierra.
Paradoja de Fermi
Es la aparente contradicción que hay entre las estimaciones que afirman que hay una alta probabilidad de que existan otras civilizaciones inteligentes en el universo observable y la ausencia de evidencia de dichas civilizaciones.
Paradoja Gato de Schrödinger
Es un experimento mental, a veces descrito como una paradoja. El escenario presenta un gato hipotético que puede estar simultáneamente vivo y muerto, un estado conocido como superposición cuántica, como resultado de estar vinculado a un evento subatómico aleatorio que puede ocurrir o no.
Paradoja de la Información
En los años setenta, Stephen Hawking argumentó que los agujeros negros destruyen para siempre la información contenida en la materia que cae en ellos. De ser el caso, ello violaría uno de los postulados básicos de la mecánica cuántica.
Una propuesta para resolver dicha paradoja es el llamado «principio de complementariedad». Este sostiene que la información que cae en un agujero negro nunca se pierde, si bien su destino depende del punto de vista del observador.
La teoría de cuerdas parece ofrecer un marco teórico en el que acomodar dicho principio. En particular, varios cálculos han conseguido explicar en términos de cuerdas cuánticas la entropía y la tasa de radiación de ciertos agujeros negros.
]]></content>
      <categories>
        <category>Curiosidades</category>
      </categories>
      <tags>
        <tag>Ciencia</tag>
        <tag>Física</tag>
      </tags>
  </entry>
  <entry>
    <title>¿Qué sales dan color a los fuegos artificiales?</title>
    <url>/blog/posts/fuegos-artificiales.html</url>
    <content><![CDATA[
Los colores de los fuegos artificiales se derivan de una amplia variedad de sales metálicas. Y cuando decimos ‘sal’, evidentemente no nos referimos a la sal de mesa común (cloruro de sodio), sino a aquellos compuestos que contienen átomos metálicos y no metálicos unidos iónicamente.
Pero, ¿qué elementos químicos son los encargados de dotar de color a los fuegos artificiales?

El componente más importante de los fuegos artificiales es, por supuesto, la pólvora. Sin embargo, la reacción química que tiene lugar no es simple, ya que intervienen elementos variados y factores como la humedad, que afecta la combustión.
Dentro de los fuegos artificiales se encuentran esos ‘polvos metálicos’ que dotan de color y espectacularidad a la pirotecnia cuando estalla.
Cuando ocurre la combustión, los diferentes metales emiten energía con distintas longitudes de onda, es decir, con colores distintos.
Aquí están las sales metálicas más comunes utilizadas y los colores que producen:

Sales de Estroncio (Sr): Color ROJO
(nitrato de estroncio, carbonato de estroncio, sulfato de estroncio)
Sales de Calcio (Ca): Color NARANJA
(carbonato de calcio, cloruro de calcio, sulfato de calcio)
Sales de Sodio (Na): Color AMARILLO
(nitrato de sodio, oxalato de sodio, criolita)
Sales de Bario (Ba): Color VERDE
(nitrato, carbonato, cloruro o clorato de bario)
Sales de Cobre (Cu): Color AZUL
(cloruro de cobre, carbonato de cobre, óxido de cobre)
Cobre + Estroncio: Color MORADO
Aluminio (Al) y Magnesio (Mg): Color PLATEADO
Magnesio (Mg), Titanio (Ti) o Aluminio (Al): Color BLANCO BRILLANTE, muy común en chispas

A grandes rasgos, estos son los compuestos químicos que se emplean para darle colorido a los fuegos artificiales.

Sales y elementos varios para cambiar el color y comportamiento del fuego

Elementos químicos para cambiar el color del fuego

Conclusiones
Recuerda compartir esta publicación si consideras de valor el contenido que publicamos y quieres que tus amigos sean más cultos cada día.
¡Gracias por leernos!
Fuente:
Ingeniería en General
https://t.me/ingenieriaengeneral
]]></content>
      <categories>
        <category>Ciencia y Tecnología</category>
      </categories>
      <tags>
        <tag>Ciencia</tag>
        <tag>Química</tag>
      </tags>
  </entry>
  <entry>
    <title>Cómo instalar paquetes en Arch Linux fácilmente</title>
    <url>/blog/posts/instalar-paquetes-arch.html</url>
    <content><![CDATA[
Al igual que en otras distribuciones, Arch Linux tiene su propio gestor de paquetes con el que podemos instalar, actualizar paquetes o desinstalarlos del sistema.
Si ya tienes algún conocimiento básico o intermedio en Linux, sabrás que no solo existe una forma de instalar paquetes. Existen muchas, las cuales se adaptan a ti y a tus preferencias.
Mira el vídeo del gran Riky Linux a continuación para saber más al respecto:



Cómo instalar paquetes en Arch paso a paso
Aquí te va un resumen para instalar paquetes de forma fácil y sencilla:


Actualizar el sistema:
Antes de instalar cualquier programa, asegúrate de que el sistema esté actualizado:
sudo pacman -Syu


Buscar el paquete deseado:
Usa el siguiente comando para buscar:
pacman -Ss nombre_del_paquete


Instalar el paquete:
Una vez encontrado, instala con:
sudo pacman -S nombre_del_paquete


Actualizar un paquete específico:
sudo pacman -Sy nombre_del_paquete


Desinstalar un paquete:
sudo pacman -R nombre_del_paquete


Instalar un paquete AUR:
Usa un gestor de AUR como yay o paru. Por ejemplo:
yay -S nombre_del_paquete



💡 Nota: AUR no está respaldado oficialmente por el equipo de Arch. Úsalo con precaución.


Conclusiones
En resumen, la instalación de programas en Arch Linux se realiza mediante el uso de comandos con pacman, y también puedes usar AUR para instalar programas que no están en los repos oficiales. Arch te da la libertad de elegir cómo y con qué instalar tus herramientas favoritas.

Créditos

https://fediverse.tv/c/gnuxero_el_canal_de_rikylinux/
Riky Linux

]]></content>
      <categories>
        <category>Guías Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Arch Linux</tag>
        <tag>Paquetes</tag>
        <tag>Pacman</tag>
      </tags>
  </entry>
  <entry>
    <title>Los 10 Repositorios de GitHub Imprescindibles para Desarrolladores</title>
    <url>/blog/posts/github-repositorios-esenciales-desarrolladores.html</url>
    <content><![CDATA[
Además de ser el hogar de algunos de los proyectos de código abierto más interesantes de Internet, GitHub también es un excelente lugar para compartir recursos de todo tipo: libros gratuitos, API’s o ideas de proyectos. Pero con la gran cantidad se vuelve difícil encontrar los repositorios más útiles. Así que he seleccionado esta lista de diez repositorios fabulosos que brindan un gran valor para todos los desarrolladores web y de software. Todos ellos le agregarán valor y lo ayudarán a convertirse en un mejor desarrollador web o de software.
Free Programming Books
[GitHub🌟: 183K+] Ofrecido en una variedad de lenguajes diferentes, Free Programming Books es sin duda uno de los repositorios más populares y destacados en GitHub. Aunque tiene “Libros” en su nombre, ofrece mucho más que eso. Contiene secciones de cursos en línea gratuitos, recursos de programación interactivos, conjuntos de problemas y programación competitiva, juegos de programación, podcasts y hojas de trucos para casi todos los lenguajes de programación.

Developer Roadmap
[GitHub🌟: 155K+] ¿Quedó atascado? o ¿necesita algún consejo para comenzar su viaje como desarrollador? entonces este repositorio lo guiará. Tiene todas las tecnologías que necesitas saber si quieres convertirte en un Ingeniero Frontend, Backend o DevOps. Dispone de todas las tecnologías para que se adapte a su necesidad o comodidad.

OSSU Computer Science
[GitHub🌟:81K+] Si no tiene una formación o un título en ciencias de la computación y desea el conocimiento equivalente al mismo que un título en Ciencias de la Computación, entonces este repositorio es para usted. Es para aquellos que desean una base adecuada y completa en conceptos fundamentales para todas las disciplinas informáticas. Ofrece todos los recursos para ayudarlo a convertirse en un graduado autodidacta en ciencias de la computación y tiene una comunidad mundial de estudiantes. Está diseñado de acuerdo con los requisitos de grado de las especializaciones en ciencias de la computación de pregrado, menos los requisitos de educación general (no en informática), ya que se supone que la mayoría de las personas que siguen este plan de estudios ya tienen educación fuera del campo de la informática. Los cursos en sí se encuentran entre los mejores del mundo, a menudo provenientes de Harvard, Princeton, MIT, etc., pero elegidos específicamente para cumplir con los criterios.

Awesome
[GitHub🌟: 158K+] Como su nombre lo describe, tiene una lista impresionante de todo tipo de temas interesantes que van desde la informática hasta los medios, desde los juegos hasta los negocios, y la lista continúa.

Build your own X
[GitHub🌟: 103K+] Si eres una persona que cree en el principio de “aprender haciendo”, entonces este repositorio tiene el potencial de convertirse en tu parada diaria en GitHub. Tiene enlaces a los recursos que lo ayudan a crear su propia criptomoneda, base de datos, bots, clientes de BitTorrent y muchos más.

Coding Interview University
[Github 🌟: 165K+] Coding Interview University tiene un plan de estudios de varios meses para convertirse en ingeniero de software para una gran empresa de tecnología como Google, Amazon, Facebook, Apple o cualquier otra empresa de software. Ofrece consejos sobre cómo estudiar para convertirse en ingeniero de confiabilidad o ingeniero de operaciones. También tiene enlaces a las tarjetas didácticas para repasar rápidamente sus conocimientos y mantenerse actualizado, creado originalmente por el autor del repositorio que consiguió un trabajo en Amazon. Y hay muchas más historias de éxito como esa.

Public API’s
[GitHub🌟: 118K+] Public API’s tiene una lista colectiva de todas las API’s gratuitas disponibles en Internet para usar en sus proyectos personales o profesionales. Ofrece una amplia gama de interfaces de programación de aplicaciones (API), como negocios, anime, animales, noticias, finanzas, juegos y más.

Tech Interview Handbook
[GitHub🌟:51K+] Tech Interview Handbook tiene todos los materiales que necesita para descifrar una entrevista técnica. Tiene una variedad de material sobre cómo prepararse para entrevistas de codificación, buenas preguntas para hacerle a su entrevistador, consejos útiles sobre el currículum y mucho más.

System Design Primer
[GitHub🌟:127K+] System Design Primer es un excelente repositorio para ingenieros de software que lo ayudará a aprender cómo diseñar sistemas a gran escala. Eso te ayudará a convertirte en un mejor ingeniero. El repositorio proporciona una colección organizada de recursos para este amplio tema. Debido a que el diseño del sistema a menudo es un componente requerido del proceso de entrevista técnica en muchas empresas, este repositorio también puede ayudarlo a prepararse para esas entrevistas con una guía de estudio, consejos sobre cómo abordar una entrevista, preguntas de entrevista con soluciones, juegos de tarjetas flash Anki para aprendizaje interactivo y desafíos de codificación interactivos.

Design Resources for Developers
[GitHub🌟:25K+] Este repositorio tiene una lista seleccionada de recursos de diseño e interfaz de usuario de fotos de stock, plantillas web, marcos CSS, bibliotecas de interfaz de usuario, herramientas y mucho más, disponibles de forma gratuita para usar en sus proyectos y aplicaciones. Ofrece todas las plantillas que necesita para comenzar con sus proyectos de desarrollo web.

Espero que encuentre estos repositorios tan útiles como yo y que pueda usarlos para convertirse en mejor ingeniero de software. ¡Gracias por leer!
]]></content>
      <categories>
        <category>Herramientas y Recursos</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Desarrollo Web</tag>
        <tag>Recursos</tag>
        <tag>Programación</tag>
      </tags>
  </entry>
  <entry>
    <title>Marie Curie: La leyenda que ganó 2 premios Nobel</title>
    <url>/blog/posts/marie-curie-en-3-minutos.html</url>
    <content><![CDATA[Descubre la historia de Marie Curie, la primera mujer en recibir 2 premios Nobel y ser una leyenda en la Física y la Química.

“Cuanto más mayor te haces, más sientes que el momento presente debe ser disfrutado, tanto como si fuera un estado de gracia”
— Marie Curie


  


Visita la página de “Entropía Sin Retorno”

Fuente:
https://www.facebook.com/Entropia.SinRetorno
]]></content>
      <categories>
        <category>Biografías</category>
      </categories>
      <tags>
        <tag>Ciencia</tag>
        <tag>Historia</tag>
      </tags>
  </entry>
  <entry>
    <title>Top extensiones para navegadores que todo techie debería probar</title>
    <url>/blog/posts/mejores-extensiones.html</url>
    <content><![CDATA[
Como programadores o entusiastas de la tecnología queremos estar a la vanguardia y destacar entre los demás. Quizás alguna vez hayas querido que hubiera una herramienta que te facilite la tarea o te ahorre tiempo. Es por ello que hoy te traemos una lista con algunas extensiones que sin duda te encantarán, ya sea por su gran utilidad o porque añaden una estética diferente.
uBlock Origin
Más de alguna vez nos hemos frustrado de tanto saltar y quitar anuncios por aquí y por allá, pero eso ha acabado ahora. uBlock Origin es una extensión que te bloquea cualquier tipo de anuncio en cualquier sitio que visites, incluyendo los molestos anuncios de YouTube, consumiendo menos recursos que otros bloqueadores. Así que dale una oportunidad y verás la diferencia.

Dark Reader
¿Te gusta el modo oscuro? Apuesto a que sí. ¿Te molestan los sitios que no tienen modo oscuro? Apuesto a que sí también. Dark Reader es una extensión que modifica las páginas web para que se adapten a un modo oscuro, cambiando el fondo y el color del texto. Es de mucha utilidad para quienes trabajan por la noche, reduciendo así la fatiga visual. Además, puedes añadirle un atajo de teclado para no andar dando tantos clics.

Refined GitHub
Sin duda, GitHub es la plataforma más conocida para almacenar tus proyectos. Pero, ¿sabías que puedes añadirle más funcionalidades? Sí, leíste bien. Con Refined GitHub puedes descargar carpetas o archivos individuales sin tener que descargar todo el repositorio, además de revertir cambios de un commit y muchas funcionalidades más. Conviértete en un pro con esta extensión.



Añadiremos otras más adelante.

]]></content>
      <categories>
        <category>Recomendaciones</category>
      </categories>
      <tags>
        <tag>Extensiones</tag>
        <tag>Navegadores</tag>
      </tags>
  </entry>
  <entry>
    <title>Recursos Esenciales para Desarrolladores y Diseñadores Web</title>
    <url>/blog/posts/recursos-desarrollo-diseno-web.html</url>
    <content><![CDATA[
Ya sea que necesites herramientas para facilitar tu tarea como programador o necesites inspiración para un nuevo diseño en mente, agilizar el proceso es algo que todos necesitamos, ¿las razones? Mejorar el tiempo de entrega, salir temprano del trabajo entre otros beneficios. Checa este listado que preparamos para ti.
Escuchá música lo-fi mientras lées este artículo

  
    
      
        
        
      
    
  


The Front-End Checklist
Si lo que quieres en esta vida es convertirte en desarrollador web, este sitio web, recoge todas las fases y tecnologías que deberías aprender para crear sitios web increíbles.

Ir al sitio

Web Skills
Web Skills es una visión general de las habilidades útiles para aprender como desarrollador web. Es útil para las personas que acaban de comenzar a aprender sobre desarrollo web y para las personas que han estado en el campo durante años y quieren aprender cosas nuevas.

Ir al sitio


  Artículos Relacionados  
  


Goodpalette
Usar demasiados colores a menudo distrae. Limitar su paleta de colores a un color primario, un color de acento y una base sólida de tonos neutros puede ayudar a que su diseño se sienta consistente.
Goodpalette le proporciona precisamente eso. Cada color tiene nueve tonos que han sido cuidadosamente seleccionados para ser utilizados para texto, fondos, pozos, botones y más. También puede ver cómo se verá el color en diferentes tipos de sitios web con las maquetas en vivo. Una cosa es mirar una selección de muestras de color de color de forma aislada, pero verlo en el contexto de una aplicación real es clave.

Ir al sitio

Flaticon
¿Necesitas íconos para tu sitio web, alguna tarea o algún proyecto? Flaticon es tu solución, tiene millones de íconos disponibles para descargar en PNG, SVG, EPS, PSD y en formato CSS, ¡en la mejor resolución posible!

Ir al sitio

¡Próximamente añadiremos más fuentes!
]]></content>
      <categories>
        <category>Herramientas y Recursos</category>
      </categories>
      <tags>
        <tag>Desarrollo Web</tag>
        <tag>Recursos</tag>
        <tag>Diseño Web</tag>
        <tag>Herramientas</tag>
      </tags>
  </entry>
  <entry>
    <title>Optimiza la Velocidad de tu Web: Tutorial con WebP y PageSpeed</title>
    <url>/blog/posts/pagespeed-y-optimizacion-web.html</url>
    <content><![CDATA[En este articulo voy a ir al grano, navegando por la web me he encontrado muchos sitios sin optimización o con problemas de carga, algunos están dentro del 40% al 70% de optimización según Google y esto podría estar afectando tanto a la experiencia de usuario como al posicionamiento en el buscador más grande del mundo, por eso les comparto este pequeño tutorial que posiblemente podría ayudar a algunos a utilizar herramientas nuevas, reforzar sus conocimientos y mejorar un poco la carga de su sitio web.

Herramientas:

Imágenes en Webp
Creado y distribuido por Google, Webp es un formato contenedor de imágenes, ofrece la posibilidad de reducir el peso de una imagen desde un 60%, ademas de estar optimizado para trabajar con la mayoría de navegadores web. Esta será nuestra primer herramienta.

PageSpeed Insights de Google
Herramienta para análisis y diagnostico de rendimiento. Diseñada por Google, PageSpeed Insights ofrece un análisis gratuito del rendimiento de tu sitio web. Esta sera nuestra segunda herramienta.

Vamos a comenzar
Para empezar debemos saber que problemas tiene nuestro sitio web en cuestión de performance, para esto vamos a ingresar al sitio web oficial de PageSpeed y colocaremos la url de nuestro sitio.

En este caso vemos un rendimiento bajo, visitando el sitio de manera orgánica notamos que es una app hecha con React, y que a pesar de obtener un porcentaje bajo en este análisis, la carga está oscilando entre 1 y 2 segundos promedio, entonces veremos que falla.

Al desplazarnos leemos una lista detallada de errores y posibles soluciones. Dentro de ellas encontramos que algunas imágenes se encuentran en formato jpg y png.

Solución:
Paso 1
Necesitamos convertir nuestros archivos png a webp. Ingresamos al siguiente url: convertio.co, nos mostrara un panel donde agregaremos y convertiremos nuestros archivos a webp.
Paso 2
Remplazar estos archivos dentro de nuestro proyecto.

Paso 3
Agregar lazy loading a las imágenes. En Html es tan simple como agregar la propiedad loading=&quot;lazy&quot; dentro de nuestra etiqueta img, de la siguiente manera:

Ahora vamos a hacer un segundo análisis para ver el resultado.

Al ser un sitio web con React nos damos cuenta de que un ligero cambio en formatos de imágenes y un poco de lazy loading al momento de renderizar el DOM nos ayudaron a mejorar el performance y lo datos de rendimiento, mejorando la visión que tiene Google de nuestro sitio y haciéndolo un mejor candidato para posicionamiento SEO, es posible que en tu sitio experimentes una mejora notoria aunque no tan sorprendente como esta.
Ademas de lo anterior algunos consejos para mejorar el rendimiento del sitio web son:

Utiliza un tamaño adecuado de imágenes para dispositivos móviles.
Utiliza siempre buenas practicas al programar.
El uso de bibliotecas como: Bootstrap o Tailwind podría afectar la carga si no se depura el código correctamente.
Permite que tu Hosting cree una aceleración por medio de caché.


Conclusión:
Mejorar el rendimiento de tu sitio web ayudará a tener una mejor interacción y crear una experiencia fluida para el usuario.
con 💜 s3ntin3l
Invítame un Cafecín ☕
]]></content>
      <categories>
        <category>Tutoriales útiles</category>
      </categories>
      <tags>
        <tag>Optimización Web</tag>
        <tag>Tutorial</tag>
      </tags>
  </entry>
  <entry>
    <title>¿Cómo se diseña un coche? El paso a paso del diseño automotriz</title>
    <url>/blog/posts/diseno-automotriz.html</url>
    <content><![CDATA[
Aunque a veces pueda parecer fácil, diseñar un nuevo modelo es una tarea que exige un gran esfuerzo por parte de un amplio equipo de profesionales.
Desde que se coge lápiz y papel hasta que el coche sale a la venta, se suceden una serie de pasos que SEAT nos desvela con su SUV Ateca como ejemplo.

Estos son los ocho pasos imprescindibles en todo proceso de diseño según SEAT:

Briefing
Se redactan las líneas maestras del modelo: la hoja de ruta que definirá el ADN del coche.
Todo el proceso de diseño se ajustará a estas indicaciones.

Briefing en el diseño de autos

Esbozos
Los diseñadores plasman sus ideas a mano: “lo que nos gustaría hacer”.
Durante cuatro años se pueden llegar a elaborar más de 1,000 esbozos.

Esbozos del diseño

Generación del CAD
Se recrea virtualmente el vehículo con software CAD (Computer-Aided Design), lo cual permite trabajar en 2D y 3D y hacer seguimiento técnico.

Diseño CAD

Modelo de “Clay”
Un modelo de arcilla a escala real que puede pesar más de 4 toneladas. Se le va dando forma y ajustando manualmente durante el desarrollo.

Modelo de arcilla

“Frozen Model”
Es el modelo definitivo aprobado por la empresa. A pesar de ser aún de clay, tiene apariencia real. Se pueden usar hasta 5,000 kg de arcilla en total.

Frozen Model del diseño automotriz

Creación de colores
El departamento Color&amp;Trim formula hasta 100 colores, aunque solo 12 se aprueban. Se inspiran en la moda, la arquitectura y el diseño de producto.

Creación y elección de colores

Asientos
Los asientos deben ser cómodos y estéticos. Se eligen materiales y patrones con ayuda de máquinas de coser especializadas en el prototipo.

Elaboración de asientos

Diseño interior
Orientado al conductor. La pantalla central define el resto del diseño. Se prioriza funcionalidad: guardar objetos, accesibilidad y ergonomía.

Diseño interior funcional

Conclusiones
Aunque parezca una tarea sencilla, diseñar un coche es un proceso que puede llevar meses o años.
El resultado final es mucho más que un vehículo: es una obra colectiva de diseño, ingeniería y pasión por la movilidad.
Fuente:
Ingeniería en General
https://t.me/ingenieriaengeneral
]]></content>
      <categories>
        <category>Tecnología</category>
      </categories>
      <tags>
        <tag>Ingeniería</tag>
        <tag>Diseño automotriz</tag>
      </tags>
  </entry>
  <entry>
    <title>La velocidad de la luz y lo que observamos</title>
    <url>/blog/posts/velocidad-de-la-luz.html</url>
    <content><![CDATA[Un ejemplo sencillo de cómo lo que observamos, es un haz de luz que proviene de un tiempo determinado; segundos, minutos, horas, semanas, meses, años, años luz… según cuán lejos se encuentre el objetivo del observardor. Es por eso, que algunas estrellas, galaxias, etc. podrían inclusive no existir y aún así poder observalas de cómo fueron en su existencia.

  


Visita la página de “Cosmonauta”

Fuente:
https://www.facebook.com/Cosmonauta-104167972264564
]]></content>
      <categories>
        <category>Curiosidades</category>
      </categories>
      <tags>
        <tag>Ciencia</tag>
        <tag>Espacio</tag>
      </tags>
  </entry>
  <entry>
    <title>Sobre mí</title>
    <url>/blog/about/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/css/menu-custom.css</url>
    <content><![CDATA[/* CSS personalizado para el menú de navegación del tema Solitude */

/* ========================================
   ESPACIADO ENTRE LETRAS DEL MENÚ
   ======================================== */

/* Más específico para asegurar que se aplique */
#menus>div.menus_items>div>a,
.menus_items a {
  letter-spacing: normal !important; /* Ajusta el espaciado entre letras */
}]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/css/modifications.css</url>
    <content><![CDATA[/* ========================================
   MODIFICACIONES PERSONALIZADAS DEL BLOG
   ======================================== */

/* ========================================
   FONDO DE PLASMA ANIMADO
   ======================================== */

/* Contenedor principal del fondo de plasma */
.wrapper {
    display: grid;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    filter: blur(85px);
    z-index: -999; /* Asegurar que esté detrás de todo */
    pointer-events: none; /* No interfiere con la interacción */
}

/* Estilos base para todos los gradientes */
.gradient {
    position: absolute;
    border-radius: 100%;
    opacity: 0.15;
    mix-blend-mode: screen;
    will-change: transform; /* Optimización para animaciones futuras */
    /* Animaciones comentadas - descomenta para activar */
    /*animation-iteration-count: infinite;
    animation-timing-function: cubic-bezier(0.1, 0, 0.9, 1);*/
}

/* Gradiente 1 - Púrpura (esquina superior izquierda) */
.gradient_1 {
    width: 750px;
    height: 750px;
    background: #9314a3;
    z-index: -998;
    place-self: start start;
    /*animation-duration: 25s;
    animation-name: animation-gradient-1;*/
}

/* Gradiente 2 - Azul (centro) */
.gradient_2 {
    width: 850px;
    height: 850px;
    background: #3b94a8;
    z-index: -997;
    place-self: center;
    /*animation-duration: 30s;
    animation-name: animation-gradient-2;*/
}

/* Gradiente 3 - Púrpura (esquina inferior derecha) */
.gradient_3 {
    width: 750px;
    height: 750px;
    background: #9314a3;
    z-index: -996;
    place-self: end end;
    /*animation-duration: 35s;
    animation-name: animation-gradient-3;*/
}

/* ========================================
   RESPONSIVE DESIGN - GRADIENTES
   ======================================== */

/* Tablets y pantallas medianas */
@media screen and (max-width: 896px) {
    .gradient_1 {
        width: 600px;
        height: 600px;
        place-self: start center;
    }

    .gradient_2 {
        width: 700px;
        height: 700px;
    }

    .gradient_3 {
        width: 600px;
        height: 600px;
        place-self: end center;
    }
}

/* Móviles y pantallas pequeñas */
@media screen and (max-width: 543px) {
    .wrapper {
        filter: blur(60px); /* Menos blur en móviles para mejor rendimiento */
    }

    .gradient {
        opacity: 0.1; /* Menos opacidad en móviles */
    }

    .gradient_1 {
        width: 500px;
        height: 500px;
        place-self: start center;
    }

    .gradient_2 {
        width: 600px;
        height: 600px;
    }

    .gradient_3 {
        width: 500px;
        height: 500px;
        place-self: end center;
    }
}

/* ========================================
   EFECTOS DE TRANSPARENCIA - CONTENIDO
   ======================================== */

/* Artículo principal */
#post {
    background-color: rgba(255, 255, 255, 0.6);
    backdrop-filter: blur(10px);
    border-radius: 8px;
    transition: background-color 0.3s ease;
}

/* Tarjetas del sidebar */
#aside-content .card-widget {
    background-color: rgba(255, 255, 255, 0.6);
    backdrop-filter: blur(10px);
    border-radius: 8px;
    transition: background-color 0.3s ease;
}

/* Banner principal */
div#banners {
    background-color: rgba(255, 255, 255, 0.6);
    backdrop-filter: blur(10px);
    border-radius: 8px;
    transition: background-color 0.3s ease;
}

/* Items de posts recientes */
.recent-post-item {
    background-color: rgba(255, 255, 255, 0.6);
    backdrop-filter: blur(10px);
    border-radius: 8px;
    transition: background-color 0.3s ease;
}

/* ========================================
   MODO OSCURO - TRANSPARENCIAS
   ======================================== */

/* Artículo principal - Modo oscuro */
[data-theme="dark"] #post {
    background-color: rgba(27, 28, 32, 0.6);
}

/* Tarjetas del sidebar - Modo oscuro */
[data-theme="dark"] #aside-content .card-widget {
    background-color: rgba(27, 28, 32, 0.6);
}

/* Banner principal - Modo oscuro */
[data-theme="dark"] div#banners {
    background-color: rgba(27, 28, 32, 0.6);
}

/* Items de posts recientes - Modo oscuro */
[data-theme="dark"] .recent-post-item {
    background-color: rgba(27, 28, 32, 0.6);
}

/* ========================================
   OPTIMIZACIONES DE RENDIMIENTO
   ======================================== */

/* Reducir animaciones para usuarios que lo prefieran */
@media (prefers-reduced-motion: reduce) {
    .gradient {
        animation: none;
    }
    
    .wrapper {
        filter: blur(40px); /* Menos blur para mejor rendimiento */
    }
}

/* Ocultar efectos en dispositivos de muy baja potencia */
@media (max-width: 480px) and (max-height: 640px) {
    .wrapper {
        opacity: 0.5; /* Reducir intensidad visual */
    }
}

/* ========================================
   UTILIDADES Y EFECTOS ADICIONALES
   ======================================== */

/* Efecto hover para elementos con transparencia */
#post:hover,
#aside-content .card-widget:hover,
div#banners:hover,
.recent-post-item:hover {
    backdrop-filter: blur(15px);
}

/* Modo oscuro - Efecto hover */
[data-theme="dark"] #post:hover,
[data-theme="dark"] #aside-content .card-widget:hover,
[data-theme="dark"] div#banners:hover,
[data-theme="dark"] .recent-post-item:hover {
    background-color: rgba(27, 28, 32, 0.75);
}

/* ========================================
   NUEVO CODIGO A SER FORMATEADO Y ORDENADO
   ======================================== */

/* Cambiar el color del texto de blanco a negro en el modo oscuro */
.post #post-info .post-title,
.post #post-info #post-meta,
.post #post-info #post-firstinfo .meta-firstline .post-meta-original,
.post #post-info #post-firstinfo .meta-firstline span.post-meta-categories a.post-meta-categories,
.post #post-info #post-meta a,
.post #post-info #post-firstinfo .meta-firstline .tag_share .post-meta__tag-list .post-meta__tags {
    color: var(--efu-black)
}

/* No mostrar nada de la siguiente clase */
.post .post-bg .coverdiv {
    display: none;
}

/* Mejorar el diseño de los links de TITULOS */
.article-container a {
    color: var(--efu-fontcolor);
    border-radius: 4px 4px 0 0;
    border-bottom: 3px solid;
    border-image: linear-gradient(90deg, #9314a3, #3b94a8) 1;
    font-weight: 700;
}

.article-container p a:not(.fancybox) {
    color: var(--efu-theme);
    font-weight: 700;
    text-decoration: none;
    border-radius: 4px 4px 0 0;
    border-bottom: 2px solid;
    border-image: linear-gradient(90deg, #9314a3, #3b94a8) 1;
    padding: 0px 4px;
    transition: 0.2s;
}]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/css/schedule.css</url>
    <content><![CDATA[.card-widget {
  max-height: calc(100vh - 100px);
  position: relative;
}

/* Centrar el título del schedule */
#schedule-title.centered-title {
  text-align: center;
  font-weight: bold;
  margin-bottom: 10px;
  padding: 8px 0;
}

.card-times a,
.card-times div {
  color: var(--efu-fontcolor);
}

#card-widget-calendar .item-content {
  display: flex;
}

#calendar-area-left {
  width: 45%;
}

#calendar-area-right {
  width: 55%;
}

#calendar-area-left,
#calendar-area-right {
  height: 100%;
  padding: 4px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

#calendar-main {
  width: 100%;
}

#calendar-week {
  height: 1.2rem;
  font-size: 14px;
  letter-spacing: 1px;
  font-weight: 700;
  align-items: center;
  display: flex;
}

#calendar-date {
  height: 3rem;
  line-height: 1.3;
  font-size: 64px;
  letter-spacing: 3px;
  color: var(--efu-main);
  font-weight: 700;
  align-items: center;
  display: flex;
  position: absolute;
  top: calc(50% - 2.1rem);
}

#calendar-lunar,
#calendar-solar {
  height: 1rem;
  font-size: 12px;
  align-items: center;
  display: flex;
  position: absolute;
}

#calendar-solar {
  bottom: 2.1rem;
}

#calendar-lunar {
  bottom: 1rem;
  color: var(--efu-secondtext);
}

#calendar-main a {
  height: 1rem;
  width: 1rem;
  border-radius: 50%;
  font-size: 12px;
  line-height: 12px;
  display: flex;
  justify-content: center;
  align-items: center;
}

#calendar-main a.now {
  background: var(--efu-main);
  color: var(--efu-card-bg);
}

#calendar-main .calendar-rh a {
  color: var(--efu-secondtext);
}

.calendar-r0,
.calendar-r1,
.calendar-r2,
.calendar-r3,
.calendar-r4,
.calendar-r5,
.calendar-rh {
  height: 1.2rem;
  display: flex;
}

.calendar-d0,
.calendar-d1,
.calendar-d2,
.calendar-d3,
.calendar-d4,
.calendar-d5,
.calendar-d6 {
  width: calc(100% / 7);
  display: flex;
  justify-content: center;
  align-items: center;
}

#card-widget-schedule .item-content {
  display: flex;
}

#schedule-area-left,
#schedule-area-right {
  height: 100px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#schedule-area-left {
  width: 30%;
}

#schedule-area-right {
  width: 70%;
  padding: 0 5px;
}

.schedule-r0,
.schedule-r1,
.schedule-r2 {
  height: 2rem;
  width: 100%;
  align-items: center;
  display: flex;
}

.schedule-d0 {
  width: 30px;
  margin-right: 5px;
  text-align: center;
  font-size: 12px;
}

.schedule-d1 {
  width: calc(100% - 35px);
  height: 1.5rem;
  align-items: center;
  display: flex;
}

progress::-webkit-progress-bar {
  background: linear-gradient(
    to right,
    var(--efu-main-op-deep),
    var(--efu-main-op),
    var(--efu-main-op-light)
  );
  border-radius: 5px;
  overflow: hidden;
}

progress::-webkit-progress-value {
  background: var(--efu-main);
  border-radius: 5px;
}

.aside-span1,
.aside-span2 {
  height: 1rem;
  font-size: 12px;
  z-index: 1;
  display: flex;
  align-items: center;
  position: absolute;
}

.aside-span1 {
  margin-left: 5px;
}

.aside-span2 {
  right: 20px;
  color: var(--efu-secondtext);
}

.aside-span2 a {
  margin: 0 3px;
}

#pBar_month,
#pBar_week,
#pBar_year {
  width: 100%;
  border-radius: 5px;
  height: 100%;
}

#schedule-date,
#schedule-days,
#schedule-title {
  display: flex;
  align-items: center;
}

#schedule-title {
  height: 25px;
  line-height: 1;
  font-size: 14px;
  font-weight: 700;
}

#schedule-days {
  height: 40px;
  line-height: 1;
  font-size: 30px;
  font-weight: 900;
  color: var(--efu-main);
}

#schedule-date {
  height: 20px;
  line-height: 1;
  font-size: 12px;
  color: var(--efu-secondtext);
}

#card-widget-schedule,
#card-widget-calendar {
  padding: 10px;
}
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/css/theme-variables.css</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/css/waline-custom.css</url>
    <content><![CDATA[/* ========================================
   PERSONALIZACIÓN CSS PARA WALINE
   ======================================== */

/* ========================================
   CONTENEDOR PRINCIPAL DE COMENTARIOS
   ======================================== */

:root {
    /* Font Size */
    --waline-font-size: 16px;

    /* Regular color */
    --waline-white: #fff;
    --waline-light-grey: #999;
    --waline-dark-grey: #666;

    /* Theme Color */
    --waline-theme-color: #27ae60;
    --waline-active-color: #2ecc71;

    /* Layout Color */
    --waline-color: #444;
    --waline-bg-color: #fff;
    --waline-bg-color-light: #f8f8f8;
    --waline-bg-color-hover: #f0f0f0;
    --waline-border-color: #ddd;
    --waline-disable-bg-color: #f8f8f8;
    --waline-disable-color: #bbb;
    --waline-code-bg-color: #282c34;

    /* Special Color */
    --waline-bq-color: #f0f0f0;

    /* Avatar */
    --waline-avatar-size: 3.25rem;
    --waline-m-avatar-size: calc(var(--waline-avatar-size) * 9 / 13);

    /* Badge */
    --waline-badge-color: #3498db;
    --waline-badge-font-size: 0.775em;

    /* Information */
    --waline-info-bg-color: #f8f8f8;
    --waline-info-color: #999;
    --waline-info-font-size: 0.625em;

    /* Render choice */
    --waline-border: 1px solid var(--waline-border-color);
    --waline-avatar-radius: 50%;
    --waline-box-shadow: none;
}

/* ↓ Based on user settings */
darkmode-selector {
    /* Regular color */
    --waline-white: #000;
    --waline-light-grey: #666;
    --waline-dark-grey: #999;

    /* Layout color */
    --waline-color: #888;
    --waline-bg-color: #1e1e1e;
    --waline-bg-color-light: #272727;
    --waline-border-color: #333;
    --waline-disable-bg-color: #444;
    --waline-disable-color: #272727;

    /* Special color */
    --waline-bq-color: #272727;

    /* Other color */
    --waline-info-bg-color: #272727;
    --waline-info-color: #666;
}]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/blog/js/schedule.js</url>
    <content><![CDATA[document.addEventListener("DOMContentLoaded", () => {
  initializeCard();
});

document.addEventListener("pjax:complete", () => {
  initializeCard();
});

function initializeCard() {
  cardTimes();
  cardRefreshTimes();
}

let year,
  month,
  week,
  date,
  dates,
  weekStr,
  monthStr,
  asideTime,
  asideDay,
  asideDayNum,
  animalYear,
  ganzhiYear,
  lunarMon,
  lunarDay;
const now = new Date();

function cardRefreshTimes() {
  const e = document.getElementById("card-widget-schedule");
  if (e) {
    asideDay = (now - asideTime) / 1e3 / 60 / 60 / 24;
    e.querySelector("#pBar_year").value = asideDay;
    e.querySelector("#p_span_year").innerHTML =
      ((asideDay / 365) * 100).toFixed(1) + "%";
    e.querySelector(
      ".schedule-r0 .schedule-d1 .aside-span2"
    ).innerHTML = `Faltan ${(365 - asideDay).toFixed(0)} días`;
    e.querySelector("#pBar_month").value = date;
    e.querySelector("#pBar_month").max = dates;
    e.querySelector("#p_span_month").innerHTML =
      ((date / dates) * 100).toFixed(1) + "%";
    e.querySelector(
      ".schedule-r1 .schedule-d1 .aside-span2"
    ).innerHTML = `Faltan ${dates - date} días`;
    e.querySelector("#pBar_week").value = week === 0 ? 7 : week;
    e.querySelector("#p_span_week").innerHTML =
      (((week === 0 ? 7 : week) / 7) * 100).toFixed(1) + "%";
    e.querySelector(
      ".schedule-r2 .schedule-d1 .aside-span2"
    ).innerHTML = `Faltan ${7 - (week === 0 ? 7 : week)} días`;
  }
}

function cardTimes() {
  year = now.getFullYear();
  month = now.getMonth();
  week = now.getDay();
  date = now.getDate();

  const e = document.getElementById("card-widget-calendar");
  if (e) {
    const isLeapYear = (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    weekStr = ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"][week];
    const monthData = [
      { month: "Ene", days: 31 },
      { month: "Feb", days: isLeapYear ? 29 : 28 },
      { month: "Mar", days: 31 },
      { month: "Abr", days: 30 },
      { month: "May", days: 31 },
      { month: "Jun", days: 30 },
      { month: "Jul", days: 31 },
      { month: "Ago", days: 31 },
      { month: "Sep", days: 30 },
      { month: "Oct", days: 31 },
      { month: "Nov", days: 30 },
      { month: "Dic", days: 31 },
    ];
    monthStr = monthData[month].month;
    dates = monthData[month].days;

    const t = (week + 8 - (date % 7)) % 7;
    let n = "",
      d = false,
      s = 7 - t;
    const o =
      (dates - s) % 7 === 0
        ? Math.floor((dates - s) / 7) + 1
        : Math.floor((dates - s) / 7) + 2;
    const c = e.querySelector("#calendar-main");
    const l = e.querySelector("#calendar-date");

    l.style.fontSize = ["64px", "48px", "36px"][Math.min(o - 3, 2)];

    for (let i = 0; i < o; i++) {
      if (!c.querySelector(`.calendar-r${i}`)) {
        c.innerHTML += ``;
      }
      for (let j = 0; j < 7; j++) {
        if (i === 0 && j === t) {
          n = 1;
          d = true;
        }
        const r = n === date ? " class='now'" : "";
        if (!c.querySelector(`.calendar-r${i} .calendar-d${j} a`)) {
          c.querySelector(
            `.calendar-r${i}`
          ).innerHTML += `${n}`;
        }
        if (n >= dates) {
          n = "";
          d = false;
        }
        if (d) {
          n += 1;
        }
      }
    }

    const lunarDate = chineseLunar.solarToLunar(new Date(year, month, date));
    animalYear = chineseLunar.format(lunarDate, "A");
    ganzhiYear = chineseLunar.format(lunarDate, "T").slice(0, -1);
    lunarMon = chineseLunar.format(lunarDate, "M");
    lunarDay = chineseLunar.format(lunarDate, "d");

    const newYearDate = new Date("2026/01/01 00:00:00");
    const daysUntilNewYear = Math.floor(
      (newYearDate - now) / 1e3 / 60 / 60 / 24
    );
    asideTime = new Date(`${new Date().getFullYear()}/01/01 00:00:00`);
    asideDay = (now - asideTime) / 1e3 / 60 / 60 / 24;
    asideDayNum = Math.floor(asideDay);
    const weekNum =
      week - (asideDayNum % 7) >= 0
        ? Math.ceil(asideDayNum / 7)
        : Math.ceil(asideDayNum / 7) + 1;

    e.querySelector(
      "#calendar-week"
    ).innerHTML = `Semana ${weekNum}`;
    e.querySelector("#calendar-date").innerHTML = date
      .toString()
      .padStart(2, "0");
    e.querySelector(
      "#calendar-solar"
    ).innerHTML = `${weekStr}, ${date} ${monthStr} ${year}`;
    // e.querySelector(
    //   "#calendar-lunar"
    // ).innerHTML = `${ganzhiYear}${animalYear}&nbsp;${lunarMon}${lunarDay}`;
    document.getElementById("schedule-days").innerHTML = daysUntilNewYear;
  }
}
]]></content>
  </entry>
  <entry>
    <title>Mi Equipo</title>
    <url>/blog/kit/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Enlaces de amigos</title>
    <url>/blog/links/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Etiquetas</title>
    <url>/blog/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Untitled</title>
    <url>/blog/music/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
